{
  "swagger": "2.0",
  "info": {
    "title": "Pharma API",
    "description": "Week7 CSE 341 - Rune Larsen",
    "name": "Rune",
    "version": "1.0.0",
    "contact": {
      "name": "Rune Larsen",
      "email": "theonlyrune@byui.edu",
      "url": "https://pharma7.onrender.com/api-docs"
    }
  },
  "host": "pharma7.onrender.com",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    },
    "OAuth2": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "http://example.com/oauth/authorize"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/wife": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "description": "Endpoint to update all contacts",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/son": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "description": "Endpoint to update all contacts",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/daughter1": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "description": "Endpoint to update all contacts",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/daughter2": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "description": "Endpoint to update all contacts",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Age3": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "description": "Endpoint to update all contacts",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/savanna": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/hannah": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Age": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "description": "Endpoint to update all contacts",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/savanna2": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/hannah2": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Age2": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/contact": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/contacts/": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "description": "Endpoint to get all contacts",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "description": "Endpoint to create a contact",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "favoriteColor": {
                  "example": "any"
                },
                "birthday": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "description": "Endpoint to get one contact",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "description": "Endpoint to update all contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "favoriteColor": {
                  "example": "any"
                },
                "birthday": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "description": "Endpoint to delete a contact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/meds/": {
      "get": {
        "tags": [
          "Meds"
        ],
        "description": "Endpoint to get all medications",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Meds"
        ],
        "description": "Endpoint to create a new medication",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Medication information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Meds"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/meds/{id}": {
      "get": {
        "tags": [
          "Meds"
        ],
        "description": "Endpoint to get one Meds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Meds"
        ],
        "description": "Endpoint to create a new medication",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Medication information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Meds"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Meds"
        ],
        "description": "Endpoint to create a new medication",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Medication information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Meds"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Meds": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "Name": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "Medication Name"
                }
              }
            },
            "FillDate": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "2025-02-22"
                }
              }
            },
            "Prescription": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "12345"
                }
              }
            },
            "Rx": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "example": {
                  "type": "number",
                  "example": 1234
                }
              }
            },
            "Qty": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "example": {
                  "type": "number",
                  "example": 30
                }
              }
            },
            "Prescriber": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "Dr. Smith"
                }
              }
            },
            "Pharmacist": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "John Doe"
                }
              }
            },
            "NDC": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "1234567890"
                }
              }
            },
            "Insurance": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "Insurance Co"
                }
              }
            },
            "Claim": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "CLM123"
                }
              }
            },
            "Price": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "100.00"
                }
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "limitParam": {
      "name": "limit",
      "in": "query",
      "description": "Maximum number of records to return",
      "type": "integer"
    }
  },
  "responses": {
    "NotFound": {
      "description": "Resource not found"
    },
    "InvalidInput": {
      "description": "Invalid input"
    }
  }
}